name: Docker Swagger-Codegen v3

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v2
    - name: Build the Laserfiche API SDK
      run: docker run -v /API_GEN:/local swaggerapi/swagger-codegen-cli-v3 generate -i 'https://api.laserfiche.com/repository/swagger/v1-alpha/swagger.json' --http-user-agent "Chrome/91.0.4472.106" -l python -o /local/laserfiche_api -DpackageName=laserfiche_api
   
    - name: Copy over setup.py
      run: sudo cp -f $GITHUB_WORKSPACE/API_GEN/setup.py /API_GEN/laserfiche_api/setup.py && sudo cp -f /API_GEN/laserfiche_api/README.md /tmp/README.md && sudo cp -f $GITHUB_WORKSPACE/API_GEN/README.md /API_GEN/laserfiche_api/README.md && cp -r /API_GEN/laserfiche_api /tmp/laserfiche_api

    - name: Set VERSION from setup.py
      run: |
        VERSION=$( cat $GITHUB_WORKSPACE/API_GEN/setup.py | grep "VERSION =" | sed -e 's/ //g' | cut -d "=" -f2 ) && echo "VERSION=$VERSION" >> $GITHUB_ENV && echo ${{ env.VERSION }}

    - name: Create PyPi distro
      run: cd /tmp/laserfiche_api && python setup.py sdist

    - name: Prep /dist folder
      run: rm $GITHUB_WORKSPACE/dist/*.tar.gz && cp /tmp/laserfiche_api/dist/*.tar.gz $GITHUB_WORKSPACE/dist/.

    - uses: actions/upload-artifact@v2
      id: laserfiche_api
      name: Save PyPi distro artifact
      with: 
        name: laserfiche_api
        path: /tmp/laserfiche_api/dist/laserfiche*api*.tar.gz
        if-no-files-found: error
        
    - name: Move PyPi package to expected location
      run: mv /tmp/laserfiche_api/dist/laserfiche*api*.tar.gz $GITHUB_WORKSPACE/dist/.
      
    - name: Move PyPi docs to laserfiche-api folder
      run: cp -rf /tmp/laserfiche_api/docs/. $GITHUB_WORKSPACE/docs/.

    - name: Fixup auto-generated README.md for laserfiche-api docs
      run: cd /tmp && sudo sed -i 's/GIT_USER_ID/Layer8Err/g' README.md && sudo sed -i 's/GIT_REPO_ID/laserfiche_api/g' README.md && export VERSION=${{ env.VERSION }} && sudo sed -i s/1.0.0/${{ env.VERSION}}/g README.md

    - name: Move API Source code to laserfiche-api folder
      run: |
        cp -rf /tmp/laserfiche_api/laserfiche_api $GITHUB_WORKSPACE/. && cp -f $GITHUB_WORKSPACE/API_GEN/README-main.md $GITHUB_WORKSPACE/README.md && cat /tmp/README.md >> $GITHUB_WORKSPACE/README.md
      
    - name: Commit dist updates to main
      run: git config --global user.email ${GH_EMAIL} && git config --global user.name ${GH_USER} && git add -f . && git commit -m "GitHub action updated PyPi dist"
      env:
        GH_EMAIL: ${{ secrets.GH_EMAIL }}
        GH_USER: ${{ secrets.GH_USER }}

    - name: Set Vars for release artifact
      run: |
        DIST_PATH=$( ls -d -1 $GITHUB_WORKSPACE/dist/laserfiche_api-*.tar.gz ) && echo "DIST_PATH=$DIST_PATH" >> $GITHUB_ENV &&
        DIST_NAME=$( basename $DIST_PATH ) && echo "DIST_NAME=$DIST_NAME" >> $GITHUB_ENV &&
        UPLOAD_URL=https://github.com/Layer8Err/laserfiche_api/tree/main/dist/$DIST_NAME && echo "UPLOAD_URL=$UPLOAD_URL" >> $GITHUB_ENV

    - name: Create release
      uses: actions/create-release@v1
      id: create_release
      with:
        draft: false
        prerelease: false
        release_name: ${{ env.VERSION }}
        tag_name: ${{ github.ref }}
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Upload release artifact
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.DIST_PATH }}
        asset_name: ${{ env.DIST_NAME }}
        asset_content_type: application/gzip
        
    - uses: actions-x/commit@v2
      name: Commit new PyPi distro package

    - uses: pypa/gh-action-pypi-publish@release/v1
      name: Publish to PyPi
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
